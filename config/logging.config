# Copyright (c) 2010 __Ricoh Company Ltd.__. All rights reserved.

# Python logging configuration

# All loggers are at level DEBUG initially, since they inherit from the
# root logger. However, individual loggers or groups of loggers can be set
# differently by overrides in the config.
#
# An example of overriding the logging level for specific loggers is shown
# by some commented-out lines below, where the level of the e_ink module
# (only) was changed to "INFO".
#
# Permissible logging levels are CRITICAL, ERROR, WARNING, INFO, DEBUG, and
# VERBOSE, listed in order of increasing verbosity.

[loggers]
keys=root
#keys=root,e_ink

[handlers]
keys=root_stream_handler,root_file_handler

[formatters]
keys=root_formatter

[logger_root]
level=DEBUG
handlers=root_file_handler%(stream_handler)s

#[logger_e_ink]
#qualname=ew.e_ink
#level=INFO
#handlers=

[handler_root_stream_handler]CRITICAL 
class=StreamHandler
level=NOTSET
formatter=root_formatter
args=(sys.stderr,)

[handler_root_file_handler]
class=handlers.RotatingFileHandler
level=NOTSET
formatter=root_formatter
args=('%(log_path)s','a',200000,10)

[formatter_root_formatter]
format=%(asctime)s %(name)s %(levelname)s <%(threadName)s> %(message)s
datefmt=
#class=logging.Formatter
class=ew.util.gmt_formatter.GmtFormatter
